
[Season]
	#The lasting days of each term, while 4 seasons in 1 year, 6 terms in 1 season.
	#Range: 1 ~ 5000
	LastingDaysOfEachTerm = 7
	#The index of the initial solar term, and note it only can be used to first start the world with the mod.
	#Range: 1 ~ 24
	InitialSolarTermIndex = 1
	#Enable solar term change inform.
	EnableInform = false
	#Whether send inform with icon.
	EnableInformIcon = true
	#Enable local calendar and local info synchronization.
	EnableLocalInfoAndCalendar = false
	#Whether to pop up the solar term reminder when the calendar item cannot be placed.
	CalendarItemHint = false
	#In summer, the days are long and the nights are short, while in winter, the days are short and the nights are long.
	DynamicDaylightDuration = true
	#Day time length of spring, divided into six periods according to the solar term table.
	SpringDayTimes = [10500, 11000, 11500, 12000, 12500, 13000]
	#Day time length of summer, divided into six periods according to the solar term table.
	SummerDayTimes = [13500, 14000, 14500, 15000, 14500, 14000]
	#Day time length of autumn, divided into six periods according to the solar term table.
	AutumnDayTimes = [13500, 13000, 12500, 12000, 11500, 11000]
	#Day time length of winter, divided into six periods according to the solar term table.
	WinterDayTimes = [10500, 10000, 9500, 9000, 9500, 10000]
	#Day time length of none season, divided into six periods according to the solar term table.
	NoneDayTimes = [12000]
	#List of dimensions where season effects apply. Must be natural worlds with a day-night cycle.
	ValidDimensions = ["minecraft:overworld"]
	#The timing of snowfall now varies within a certain range each year.
	DynamicSnowTerm = true
	#Enable the season definitions system.
	EnableSeasonDefinition = false

[Weather]
	#Enable the Ecliptic local weather system that adapts weather to each biome.
	UseSolarWeather = true
	#Enable weather regions, linking specific biomes to particular weather to prevent scattered patterns.
	EnableWeatherRegion = true
	#Prevent rain from occurring in biomes without precipitation like desert.
	NotRainInDesert = false
	#Set it true to initialize weather and snow when loading the mod or level for the first time.
	ShouldInitWeather = false
	#Multiplier (0-1000) affecting the chance of rain. Higher values make rain more likely.
	#Range: 0 ~ 1000
	RainChancePercentMultiplier = 40
	#Multiplier (0-1000) affecting the chance of thunder. Higher values make thunder more likely.
	#Range: 0 ~ 1000
	ThunderChancePercentMultiplier = 20
	#Clear rain or thunder status after the player sleeps.
	ClearAfterSleep = false

[Temperature]
	#Ice or snow layer will melt in warm time.
	IceAndSnowMelt = false
	#It will snow in cold time.
	IceAndSnow = false
	#Add heat stroke effect in summer noon while in hot biome.
	HeatStroke = false

[Crop]
	#Enable crop season control.
	EnableSeasonalCrop = true
	#Enable crop humidity control.
	EnableCropHumidityControl = true
	#If enabled, humidity check will transition smoothly instead of snapping.
	CropHumidityTransition = true
	#Send message to player if failed to use bone meal on crop.
	BoneMealFailureMessage = true
	#Consume anyway if failed to use bone meal on crop.
	BoneMealConsumeOnFailure = true
	#The maximum effective diameter of the greenhouse.
	#Range: 5 ~ 256
	GreenHouseMaxDiameter = 32
	#The maximum effective height of the greenhouse.
	#Range: 3 ~ 128
	GreenHouseMaxHeight = 32
	#Build a simple greenhouse without core blocks and humidity modifiers.
	SimpleGreenHouseMode = false
	#If true, the Humidifier block will no longer consume blocks during conversion.
	NoCostHumidifier = true
	#The working range of the Season Core block.
	#Range: 4 ~ 31
	SeasonCoreRange = 15
	#Whether to enable complex shape checking.
	ComplexGreenHouseCheck = true
	#Calculate the working range of the greenhouse block by box distance and not Euclidean range.
	UseBoxDistance = true
	#[Deprecated]If a crop is not registered for a season or humid type, default values will be used.
	RegisterCropDefaultValue = false
	#Force all crops to use compatibility mode for growth control, not just those tagged as eclipticseasons:natural_plants.
	ForceCompatMode = false
	#Save environmental humidity modifiers to chunk file.
	SaveChunkEnvironmentalHumidity = true
	#Chance that crops fail to grow inside the greenhouse due to insufficient light. Higher values make failure more likely.
	#Range: 0 ~ 10000
	LowLightGreenhouseFailChance = 2000

[Animal]
	#Enable seasonal animal breed.
	EnableSeasonalBreed = false
	#Enable seasonal bee behavior, bee would like spring and not like winter and cold.
	EnableSeasonalBee = false
	#Seasons in which bees are able to pollinate crops and flowers.
	#Default: [SPRING]
	BeePollinateSeasons = ["SPRING"]
	#Seasons in which bees are generally active outside the hive.
	#Default: [SPRING, SUMMER, AUTUMN]
	BeeActiveSeasons = ["SPRING", "SUMMER", "AUTUMN"]
	#Enable seasonal fishing behavior, let enjoy summer.
	EnableSeasonalFishing = false
	#Seasons during which fishing is allowed or more effective.
	#Default: [SUMMER]
	FishingSeasons = ["SUMMER"]
	#Reduce fish availability during thunderstorms.
	LessFishInThunder = false
	#Season Core affects animals even without a greenhouse.
	SeasonCoreAffectsAnimals = true

[Compat]
	#Compatible with mods using SereneSeasons' CropTag.
	SereneSeasonsCropTag = true
	#If a mod tries to query biome precipitation using the raw method, would adjust it to correctly ignore small biomes like rivers.
	FixBiomePrecipitation = true
	#When a mod tries to query global weather parameters directly instead of using our API, Solar Weather will determine the result based on a weighted vote from the areas around players.
	#Range: 0.0 ~ 1.0
	WeatherVotePercent = 0.5

[Debug]
	#â€œEnable logging for illegal function usage.
	LogIllegalUse = false
	#Disable snowy blocks beneath light sources with light level 0.
	NotSnowyUnderLight0 = false
	#Snow can cover the block which would lights.
	NotSnowOverlayGlowingBlock = false
	#Disable chunk extra info cache cleanup.
	DisableChunkCacheCleaner = false
	#Disable unique rebinding for biome tags. Note that after disabling, tags may overlap.
	DisableUniqueBiomeTagsRebinding = false
	#Set to false to disable tag which stops block from snowy is tagged with "eclipticseasons:snow_overlay_cannot_survive_on".
	DisableSnowOverlayControlTag = false

[Map]
	#The map color of blocks will change during snow.
	ChangeMapColor = true

[Resource]
	#Enable extra built-in snow definitions resourcepack for game.
	ExtraSnowDefinitions = false

[Snow]
	#If snow falls during cold weather in warm biomes, it will gradually cover all solid blocks and grass.
	SnowyWinter = true
	#Not just the top layer, now even the leaves below are dusted with frost and snow.
	SnowyTree = true
	#Snow will not appear in overly bright areas, here define restriction levels.
	NotSnowyNearGlowingBlock = true
	#Snow will not appear in overly bright areas.
	#Range: 1 ~ 15
	NotSnowyNearGlowingBlockLevel = 10
	#Specify block IDs here to prevent those blocks from being covered by snow.
	ForceBlocksNotSnowy = ["immersiveengineering:crusher", "immersiveengineering:arc_furnace", "immersiveengineering:assembler", "immersiveengineering:auto_workbench", "immersiveengineering:fermenter", "immersiveengineering:squeezer", "immersiveengineering:refinery", "immersiveengineering:mixer", "immersiveengineering:tank", "immersiveengineering:silo", "immersiveengineering:metal_press", "immersiveengineering:diesel_generator", "immersiveengineering:coke_oven", "immersiveengineering:blast_furnace", "immersiveengineering:advanced_blast_furnace", "immersiveengineering:bottling_machine", "immersiveengineering:bucket_wheel", "immersiveengineering:excavator", "immersiveengineering:lightning_rod", "kubejs:andesite_engineering", "kubejs:fluid_engineering", "kubejs:precise_engineering", "kubejs:logistical_engineering", "immersiveengineering:light_engineering", "immersiveengineering:rs_engineering", "immersiveengineering:heavy_engineering", "kubejs:sensory_engineering", "kubejs:electronic_engineering"]
	#Snowfall is now bound to world position rather than only to biomes. This allows for more location-based operations, such as snow sweeping and localized snowfall events.
	SnowInWorld = true
	#When SnowInWorld is enabled, update chunk state on load based on differences from previous state records.
	ForceSnowyChunkUpdate = true
	#Snow Line Height, define like ["#c:is_cold/overworld", 200].
	BiomeSnowLines = []
	#When SnowInWorld is enabled, blocks like full blocks under snow layers will have a snowy appearance.
	SnowCoverUnderBlocks = true
	#When SnowInWorld is enabled, snow may melt when stepped on due to heat.
	SnowStepMelt = false

